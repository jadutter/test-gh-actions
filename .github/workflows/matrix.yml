name: Matrix Workflow
on:
  workflow_dispatch:
  workflow_call:

jobs:
  setup-magick:
    name: Check Magick
    runs-on: ubuntu-20.04
    steps:
      - name: Setup ImageMagick
        uses: mfinelli/setup-imagemagick@v5
      - name: List Fonts
        run: magick -list font
      - name: Create Test Image
        run: magick -size 320x120 xc:lightblue  -draw "font DejaVu-Sans-Mono  font-size 72  fill purple  stroke navy  stroke-width 2  translate 0,80  text 0,0 ' test '"  test-draw.png
      - name: Produce test-draw.png
        uses: actions/upload-artifact@v4
        with:
          name: test-draw.png
          path: test-draw.png
          if-no-files-found: ignore
  define-matrix:
    name: Define Matrix
    runs-on: ubuntu-20.04
    outputs:
      colors: ${{ steps.colors.outputs.colors }}
    steps:
      - name: Define Colors
        id: colors
        run: |
          echo 'colors=["red", "green", "blue"]' >> "$GITHUB_OUTPUT"

  produce-artifacts:
    name: Produce
    runs-on: ubuntu-20.04
    needs: 
      - define-matrix
      - setup-magick
    strategy:
      matrix:
        color: ${{ fromJSON(needs.define-matrix.outputs.colors) }}
    steps:
      - name: Setup ImageMagick
        uses: mfinelli/setup-imagemagick@v5
      - name: Define Color
        env:
          color: ${{ matrix.color }}
        run: |
          echo "the current color is '$color'" > color.txt
      - name: Draw Color
        env:
          color: ${{ matrix.color }}
        run: |
          magick -size 320x120 xc:lightblue  -draw "font DejaVu-Sans-Mono  font-size 72  fill ${{ matrix.color }}  stroke black  stroke-width 2  translate 0,80  text 0,0 ' ${{ matrix.color }} '"  color.png
      - name: Produce Artifact - ${{ matrix.color }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.color }}
          path: color.*
          if-no-files-found: ignore
      - name: Simulate Issue In One Node
        env:
          color: ${{ matrix.color }}
        run: if [[ ${color} == "red" ]]; then exit 1; fi

  consume-artifacts:
    name: Consume
    runs-on: ubuntu-20.04
    needs:
      - define-matrix
      - produce-artifacts
    strategy:
      matrix:
        color: ${{ fromJSON(needs.define-matrix.outputs.colors) }}
    steps:
      - name: Retrieve Artifact - ${{ matrix.color }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.color }}
      - name: Report Color
        run: |
          cat color.txt

  collate-artifacts:
    name: Collate
    runs-on: ubuntu-20.04
    needs:
      - define-matrix
      - produce-artifacts
    steps:
      - name: Retrieve Artifacts
        uses: actions/download-artifact@v4
      - name: Save Artifacts 
        uses: actions/upload-artifact@v4
        with:
          name: colors
          path: ${{ github.workspace }}/*/color.*
          retention-days: 1
          if-no-files-found: error

  clean-artifacts:
    name: Clean
    runs-on: ubuntu-20.04
    needs:
      - define-matrix
      - consume-artifacts
      - collate-artifacts
    strategy:
      matrix:
        color: ${{ fromJSON(needs.define-matrix.outputs.colors) }}
    steps:
      - name: Clean Artifact - ${{ matrix.color }}
        uses: geekyeggo/delete-artifact@v5
        with:
          name: ${{ matrix.color }}

